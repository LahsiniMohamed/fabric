---
- name: install Python dependencies
  pip:
    name: kubernetes
    state: present

- name: Cleanup ONOS namespace 
  kubernetes.core.k8s:
    name: onos-ns
    api_version: v1
    kind: Namespace
    state: absent
    wait: yes
    wait_condition:
      type: Complete
      status: "True"  

- name: Create ONOS namespace 
  kubernetes.core.k8s:
    name: onos-ns
    api_version: v1
    kind: Namespace
    state: present

- name: Deploy shared state (ConfigMap)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: startup-scripts
        namespace: onos-ns
      data:
        activate-barefoot: |
          #!/bin/bash
          host=$(hostname -s)
          status_code=$(curl -u onos:rocks --silent --output /dev/null --write-out '%{http_code}' -X POST http://${host}:8181/onos/v1/applications/org.onosproject.gui2/active)
          if [ ${status_code} == "200" ]
          then
                  exit 0
          else
                  exit 1
          fi

- name: Deploy ONOS
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: onos-deployment
        namespace: onos-ns
        labels:
          app: onos
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: onos
        template:
          metadata:
            labels:
              app: onos
          spec:
            volumes:
              - name: startup
                configMap:
                  name: startup-scripts
            containers:
            - name: onos
              image: '{{ onos.image }}'
              ports:
              - containerPort: 830
              - containerPort: 5005
              - containerPort: 8101
              - containerPort: 8181
              volumeMounts:
                - name: startup
                  mountPath: /startup
              startupProbe:
                exec:
                  command:
                    - /bin/bash
                    - /startup/activate-barefoot
                failureThreshold: 6
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 10

- name: Deploy ONOS-service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: onos-service
        namespace: onos-ns
      spec:
        selector:
          app: onos 
        ports:
        - protocol: TCP
          port: 8181
          targetPort: 8181
  register: onos_cluster

- name: Deploy ONOS-service NodePort
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: onos-service-node-port
        namespace: onos-ns
      spec:
        type: NodePort
        selector:
          app: onos 
        ports:
        - protocol: TCP
          port: 8181
          targetPort: 8181
          nodePort: 30081

- debug:
    msg:
      - "ONOS NodePort is 30081"
      - " http://{{ inventory_hostname }}:30081/onos/ui/"
      - "ONOS clusterIP is {{ onos_cluster.result.spec.clusterIP }}"
      - " ssh {{ '-i ' + ansible_ssh_private_key_file if ansible_ssh_private_key_file is defined else ''}} -A -L 8181:{{ onos_cluster.result.spec.clusterIP }}:8181 {{ ansible_user }}@{{ inventory_hostname }}"

# NOTE:XXX: #1
- name: Wait for ONOS deployment to be ready
  shell: kubectl get deployment onos-deployment --namespace onos-ns -o=jsonpath='{.status.readyReplicas}/{.status.replicas}'
  register: _onos_deployment
  until: _onos_deployment.stdout == "1/1"
  delay: 10   # Every 10s
  retries: 30 # 30 * 10s = 300s = 5min
